{
    "cpp_type" : 
    {
        "ip_v4_address"     : "ip_address",
        "ip_v6_address"     : "ip_address",
        "buffer"            : "buffer",
        "eui48"             : "eui48",
        "eui64"             : "eui64",
        "txt"               : "std::shared_ptr<dns_txt>",
        "string"            : "std::shared_ptr<dns_label>",
        "remaining base64"  : "buffer",
        "remaining hex"     : "buffer",
        "remaining string"  : "std::string",
        "datetime"          : "datetime",
        "bitmap"            : "std::shared_ptr<dns_type_bitmap>",
        "name"              : "std::shared_ptr<dns_name>",
        "uncompressed name" : "std::shared_ptr<dns_name>",
        "short"             : "short",
        "unsigned short"    : "unsigned short",
        "octet"             : "octet",
        "int"               : "int",
        "uint"              : "uint",
        "svcparams"         : "std::shared_ptr<dns_svcparams>",
        "ipseckey"          : "std::shared_ptr<dns_ipseckey>"
    },
    "cpp_param_type" :
    {
        "ip_v4_address"     : "const ip_address &",
        "ip_v6_address"     : "const ip_address &",
        "eui48"             : "const eui48 &",
        "eui64"             : "const eui64 &",
        "buffer"            : "const buffer &",
        "string"            : "const std::shared_ptr<dns_label> &",
        "remaining base64"  : "const buffer &",
        "remaining hex"     : "const buffer &",
        "remaining string"  : "const std::string &",
        "datetime"          : "const datetime &",
        "bitmap"            : "const std::shared_ptr<dns_type_bitmap> &",
        "txt"               : "const std::shared_ptr<dns_txt> &",
        "name"              : "const std::shared_ptr<dns_name> &",
        "uncompressed name" : "const std::shared_ptr<dns_name> &",
        "short"             : "short",
        "unsigned short"    : "unsigned short",
        "octet"             : "octet",
        "int"               : "int",
        "uint"              : "uint",
        "svcparams"         : "const std::shared_ptr<dns_svcparams> &",
        "ipseckey"          : "const std::shared_ptr<dns_ipseckey> &"
    },
    "to_string_method" :
    {
        "ip_v4_address"     : "get_%%ITEM%%().to_string()",
        "ip_v6_address"     : "get_%%ITEM%%().to_string()",
        "buffer"            : "get_%%ITEM%%().to_string()",
        "datetime"          : "get_%%ITEM%%().to_string()",
        "eui48"             : "get_%%ITEM%%().to_string()",
        "eui64"             : "get_%%ITEM%%().to_string()",
        "name"              : "get_%%ITEM%%()->to_string()",
        "uncompressed name" : "get_%%ITEM%%()->to_string()",
        "string"            : "get_%%ITEM%%()->to_string()",
        "txt"               : "get_%%ITEM%%()->to_string()",
        "svcparams"         : "get_%%ITEM%%()->to_string()",
        "ipseckey"          : "get_%%ITEM%%()->to_string()",
        "bitmap"            : "get_%%ITEM%%()->to_string()",
        "remaining base64"  : "util::tobase64(get_%%ITEM%%())",
        "remaining hex"     : "util::tohex(get_%%ITEM%%())",
        "remaining string"  : "get_%%ITEM%%()",
        "unsigned short"    : "boost::lexical_cast<string>(get_%%ITEM%%())",
        "short"             : "boost::lexical_cast<string>(get_%%ITEM%%())",
        "int"               : "boost::lexical_cast<string>(get_%%ITEM%%())",
        "uint"              : "boost::lexical_cast<string>(get_%%ITEM%%())",
        "octet"             : "boost::lexical_cast<string>(int(get_%%ITEM%%()))"
    },
    "from_json_method" :
    {
        "ip_v4_address"     : "ip_address((*m_json_object)[\"%%ITEM%%\"])",
        "ip_v6_address"     : "ip_address((*m_json_object)[\"%%ITEM%%\"])",
        "eui48"             : "eui48((*m_json_object)[\"%%ITEM%%\"])",
        "eui64"             : "eui64((*m_json_object)[\"%%ITEM%%\"])",
        "datetime"          : "datetime(string((*m_json_object)[\"%%ITEM%%\"]))",
        "txt"               : "make_shared<dns_txt>((*m_json_object)[\"%%ITEM%%\"])",
        "svcparams"         : "make_shared<dns_svcparams>((*m_json_object)[\"%%ITEM%%\"])",
        "ipseckey"          : "make_shared<dns_ipseckey>((*m_json_object)[\"%%ITEM%%\"])",
        "bitmap"            : "make_shared<dns_type_bitmap>((*m_json_object)[\"%%ITEM%%\"])",
        "name"              : "make_shared<dns_name>((*m_json_object)[\"%%ITEM%%\"])",
        "uncompressed name" : "make_shared<dns_name>((*m_json_object)[\"%%ITEM%%\"])",
        "string"            : "make_shared<dns_label>((*m_json_object)[\"%%ITEM%%\"])",
        "unsigned short"    : "int((*m_json_object)[\"%%ITEM%%\"])",
        "uint"              : "int((*m_json_object)[\"%%ITEM%%\"])",
        "octet"             : "int((*m_json_object)[\"%%ITEM%%\"])",
        "short"             : "int((*m_json_object)[\"%%ITEM%%\"])",
        "int"               : "int((*m_json_object)[\"%%ITEM%%\"])",
        "buffer"            : "util::frombase64((*m_json_object)[\"%%ITEM%%\"])",
        "remaining base64"  : "util::frombase64((*m_json_object)[\"%%ITEM%%\"])",
        "remaining hex"     : "util::fromhex((*m_json_object)[\"%%ITEM%%\"])",
        "remaining string"  : "string((*m_json_object)[\"%%ITEM%%\"])"
    },
    "to_json_method" :
    {
        "ip_v4_address"     : "get_%%ITEM%%().to_string()",
        "ip_v6_address"     : "get_%%ITEM%%().to_string()",
        "datetme"           : "get_%%ITEM%%().to_string()",
        "eui48"             : "get_%%ITEM%%().to_string()",
        "eui64"             : "get_%%ITEM%%().to_string()",
        "name"              : "get_%%ITEM%%()->to_string()",
        "uncompressed name" : "get_%%ITEM%%()->to_string()",
        "string"            : "get_%%ITEM%%()->to_string()",
        "txt"               : "get_%%ITEM%%()->to_base64()",
        "bitmap"            : "get_%%ITEM%%()->to_json()",
        "svcparams"         : "get_%%ITEM%%()->to_json()",
        "ipseckey"          : "get_%%ITEM%%()->to_json()",
        "unsigned short"    : "int(get_%%ITEM%%())",
        "short"             : "int(get_%%ITEM%%())",
        "int"               : "int(get_%%ITEM%%())",
        "uint"              : "int(get_%%ITEM%%())",
        "octet"             : "int(get_%%ITEM%%())",
        "buffer"            : "util::tobase64(get_%%ITEM%%())",
        "remaining base64"  : "util::tobase64(get_%%ITEM%%())",
        "remaining hex"     : "util::tohex(get_%%ITEM%%())",
        "remaining string"  : "get_%%ITEM%%()"
    },
    "to_db_method" :
    {
        "ip_v4_address"     : "r->get_%%ITEM%%().to_string()",
        "ip_v6_address"     : "r->get_%%ITEM%%().to_string()",
        "datetime"          : "r->get_%%ITEM%%().to_string()",
        "eui48"             : "r->get_%%ITEM%%().to_string()",
        "eui64"             : "r->get_%%ITEM%%().to_string()",
        "name"              : "r->get_%%ITEM%%()->to_string()",
        "uncompressed name" : "r->get_%%ITEM%%()->to_string()",
        "string"            : "r->get_%%ITEM%%()->to_string()",
        "txt"               : "r->get_%%ITEM%%()->to_base64()",
        "bitmap"            : "r->get_%%ITEM%%()->to_json().to_string()",
        "svcparams"         : "r->get_%%ITEM%%()->to_json().to_string()",
        "ipseckey"          : "r->get_%%ITEM%%()->to_json().to_string()",
        "unsigned short"    : "r->get_%%ITEM%%()",
        "uint"              : "r->get_%%ITEM%%()",
        "octet"             : "r->get_%%ITEM%%()",
        "short"             : "r->get_%%ITEM%%()",
        "int"               : "r->get_%%ITEM%%()",
        "buffer"            : "util::tobase64(r->get_%%ITEM%%())",
        "remaining base64"  : "util::tobase64(r->get_%%ITEM%%())",
        "remaining hex"     : "util::tohex(r->get_%%ITEM%%())",
        "remaining string"  : "r->get_%%ITEM%%()"
    },
    "parse_method" :
    {
        "ip_v4_address"     : "parse_ip4_address(raw, size, offset)",
        "ip_v6_address"     : "parse_ip6_address(raw, size, offset)",
        "buffer"            : "parse_buffer(raw, rr_length, size, offset)",
        "eui48"             : "parse_eui48(raw, size, offset)",
        "eui64"             : "parse_eui64(raw, size, offset)",
        "txt"               : "parse_txt(raw, size, offset)",
        "svcparams"         : "parse_svcparams(raw, size, offset)",
        "ipseckey"          : "parse_ipseckey(raw, size, offset)",
        "bitmap"            : "parse_type_bitmap(raw, size, offset)",
        "string"            : "parse_string(raw, size, offset)",
        "remaining base64"  : "parse_remaining_buffer(raw, size, offset)",
        "remaining hex"     : "parse_remaining_buffer(raw, size, offset)",
        "remaining string"  : "parse_remaining_string(raw, size, offset)",
        "datetime"          : "parse_datetime(raw, size, offset)",
        "name"              : "parse_name(raw, size, offset)",
        "uncompressed name" : "parse_name(raw, size, offset)",
        "short"             : "parse_short(raw, size, offset)",
        "unsigned short"    : "parse_unsigned_short(raw, size, offset)",
        "octet"             : "parse_octet(raw, size, offset)",
        "int"               : "parse_int(raw, size, offset)",
        "uint"              : "parse_uint(raw, size, offset)"
    },
    "unparse_method" :
    {
        "ip_v4_address"     : "unparse_ip4_address",
        "ip_v6_address"     : "unparse_ip6_address",
        "eui48"             : "unparse_eui48",
        "eui64"             : "unparse_eui64",
        "buffer"            : "unparse_buffer",
        "txt"               : "unparse_txt",
        "svcparams"         : "unparse_svcparams",
        "ipseckey"          : "unparse_ipseckey",
        "bitmap"            : "unparse_type_bitmap",
        "string"            : "unparse_string",
        "remaining base64"  : "unparse_remaining_buffer",
        "remaining hex"     : "unparse_remaining_buffer",
        "remaining string"  : "unparse_remaining_string",
        "datetime"          : "unparse_datetime",
        "name"              : "unparse_name",
        "uncompressed name" : "unparse_name",
        "short"             : "unparse_short",
        "unsigned short"    : "unparse_unsigned_short",
        "octet"             : "unparse_octet",
        "int"               : "unparse_int",
        "uint"              : "unparse_uint"
    },
    "store_type" :
    {
        "ip_v4_address"     : [ "string", 15 ],
        "ip_v6_address"     : [ "string", 45 ],
        "eui48"             : [ "string", 17 ],
        "eui64"             : [ "string", 23 ],
        "name"              : [ "string", 253 ],
        "uncompressed name" : [ "string", 253 ],
        "txt"               : [ "string", 8000 ],
        "svcparams"         : [ "string", 8000 ],
        "ipseckey"          : [ "string", 8000 ],
        "bitmap"            : [ "string", 8000 ],
        "string"            : [ "string", 255 ],
        "remaining base64"  : [ "string", 8000 ],
        "remaining hex"     : [ "string", 8000 ],
        "remaining string"  : [ "string", 8000 ],
        "short"             : [ "int", null ],
        "int"               : [ "int", null ],
        "unsigned short"    : [ "uint", null ],
        "uint"              : [ "uint", null ],
        "datetime"          : [ "datetime", null ],
        "octet"             : [ "octet", null ]
    },
    "read_method" :
    {
        "ip_v4_address"     : "ip_address(row->get_%%ITEM%%())",
        "ip_v6_address"     : "ip_address(row->get_%%ITEM%%())",
        "eui48"             : "eui48(row->get_%%ITEM%%())",
        "eui64"             : "eui64(row->get_%%ITEM%%())",
        "short"             : "row->get_%%ITEM%%()",
        "unsigned short"    : "row->get_%%ITEM%%()",
        "int"               : "row->get_%%ITEM%%()",
        "uint"              : "row->get_%%ITEM%%()",
        "octet"             : "row->get_%%ITEM%%()",
        "name"              : "std::make_shared<dns_name>(row->get_%%ITEM%%())",
        "uncompressed name" : "std::make_shared<dns_name>(row->get_%%ITEM%%())",
        "txt"               : "std::make_shared<dns_txt>(row->get_%%ITEM%%())",
        "svcparams"         : "std::make_shared<dns_svcparams>(row->get_%%ITEM%%())",
        "ipseckey"          : "std::make_shared<dns_ipseckey>(row->get_%%ITEM%%())",
        "bitmap"            : "std::make_shared<dns_type_bitmap>(row->get_%%ITEM%%())",
        "string"            : "std::make_shared<dns_label>(row->get_%%ITEM%%())",
        "remaining base64"  : "util::frombase64(row->get_%%ITEM%%())",
        "remaining hex"     : "util::fromhex(row->get_%%ITEM%%())",
        "remaining string"  : "row->get_%%ITEM%%()",
        "datetime"          : "row->get_%%ITEM%%()"
    }
}

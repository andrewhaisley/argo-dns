// 
// Copyright 2025 Andrew Haisley
// 
// This program is free software: you can redistribute it and/or modify it under the terms 
// of the GNU General Public License as published by the Free Software Foundation, either 
// version 3 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
// See the GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License along with this program. 
// If not, see https://www.gnu.org/licenses/.
// 
/**
 * autogenerated by dbgen.py at %%DATETIME%%, do not hand edit
 */

#include <boost/uuid/uuid_generators.hpp>

#include "table.hpp"

%%ROWINCLUDES%%

using namespace std;
using namespace adns;
using namespace db;

map<type_t, list<pair<table::table_t, string>>> table::o_table_sql;
map<type_t, list<pair<table::table_t, list<string>>>> table::o_index_sql;
map<type_t, list<pair<table::table_t, list<string>>>> table::o_fk_sql;

// get a list of SQL strings to create DB tables for the relevant DB type (null op for some
// DB types - e.g. MongoDB).
list<pair<table::table_t, string>> table::get_table_sql(type_t db_type)
{
    if (o_table_sql.size() == 0)
    {
%%TABLESQL%%
    }

    return o_table_sql[db_type];
}

// get a list of SQL strings to create DB indexes for the relevant DB type (null op for some
// DB types - e.g. MongoDB).
list<pair<table::table_t, list<string>>> table::get_index_sql(type_t db_type)
{
    if (o_index_sql.size() == 0)
    {
%%INDEXSQL%%
    }

    return o_index_sql[db_type];
}

// get a list of SQL strings to create DB foreign keys for the relevant DB type (null op for some
// DB types - e.g. MongoDB).
list<pair<table::table_t, list<string>>> table::get_foreign_key_sql(type_t db_type)
{
    if (o_fk_sql.size() == 0)
    {
%%FKSQL%%
    }

    return o_fk_sql[db_type];
}

void table::create_static(connection &conn)
{
    LOG(info) << "inserting base config static data";
%%STATICDATA%%
}
